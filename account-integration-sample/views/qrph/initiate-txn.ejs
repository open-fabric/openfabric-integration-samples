<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Initialize QRPH Transaction</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background-color: #f5f5f5;
        }

        h1 {
            color: #333;
        }

        h3 {
            color: #666;
        }

        #inputForm {
            width: 80%;
            max-width: 50vh;
            margin: 0 auto;
            padding: 1vh 4vh 3vh 4vh;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        }

        .formRow {
            display: flex;
            flex-direction: row;
            text-align: left;
        }

        label {
            display: inline-block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #333;
            padding-right: 10px;
            width: 60%;
            padding: 1vh 0;
        }

        input[type="text"] {
            width: 80%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        button[type="button"] {
            background-color: #29A370;;
            color: #fff;
            border: none;
            border-radius: 4px;
            padding: 10px 20px;
            cursor: pointer;
            transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
        }

        button[type="button"]:hover {
            background-color: #e0e0e0;
            box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.06), 0px 8px 10px 1px rgba(0, 0, 0, 0.042), 0px 3px 14px 2px rgba(0, 0, 0, 0.036);
        }

        .spinner {
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-left: 4px solid #007bff;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            display: none;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <h1>QRPH Transaction</h1>
    <h3>Initialize a QRPH Transaction</h3>
    <form id="inputForm">
        <h3>Input transaction details</h3>
        <div id="formFields"></div>
        <input type="hidden" id="isLoading" value="false">
        <div id="loadingSpinner" class="spinner"></div>
        <button type="button" id="submitButton">Submit Transaction</button>
    </form>

    <script>
        function apiSubmit(url, body) {
            var headers = new Headers();
            headers.append("Content-Type", "application/json");
            headers.append("Accept", "application/json");
            const params = {
                method: "POST",
                headers: headers,
                body: JSON.stringify(body),
            };
            return fetch(url, params)
                .then((response) => {
                    return response.json();
                })
        }

        function hideButton() {
            document.getElementById("loadingSpinner").style.display = "inline-block";
            document.getElementById("submitButton").style.display = "none";
        }

        function showButton() {
            document.getElementById("loadingSpinner").style.display = "none";
            document.getElementById("submitButton").style.display = "inline-block";
        }

        function renderForm() {
            const formFields = [
                { label: 'Bank Identification Code:', name: 'bank_code', value: 'CUOBPHM2XXX' },
                { label: 'Bank Account Number:', name: 'bank_account_number', value: '326010000063' },
                { label: 'Bank Branch Code:', name: 'bank_branch_code', value: '000' },
                { label: 'Merchant Category Code:', name: 'merchant_category_code', value: '5814' },
                { label: 'Currency Code:', name: 'currency_code', value: '608' },
                { label: 'Country Code:', name: 'country_code', value: 'PH' },
                { label: 'Merchant Name:', name: 'merchant_name', value: 'Open Fabric QRPH' },
                { label: 'Merchant City:', name: 'merchant_city', value: 'Manila' },
                { label: 'Postal Code:', name: 'postal_code', value: '1645' },
                { label: 'Transaction Amount:', name: 'amount', value: '1000' },
                { label: 'Transaction Currency:', name: 'currency', value: 'PHP' },
                { label: 'Tenant Reference Id:', name: 'tenant_reference_id', value: '' },
            ];

            const formContainer = document.getElementById('formFields');

            formFields.forEach((field) => {
                const div = document.createElement('div');
                div.classList.add('formRow');

                const label = document.createElement('label');
                label.textContent = field.label;
                label.setAttribute('for', field.name);

                const input = document.createElement('input');
                input.type = 'text';
                input.id = field.name;
                input.name = field.name;
                input.value = field.value;

                div.appendChild(label);
                div.appendChild(input);
                formContainer.appendChild(div);
            });
        }

        function submit() {
            try {
                hideButton()
                const formData = {};

                const inputElements = document.querySelectorAll('input');

                const success = Array.from(inputElements).every((input) => {
                    if (input.value.trim() === '' &&
                        input.id !== 'tenant_reference_id' &&
                        input.id !== 'postal_code' &&
                        input.id !== 'bank_branch_code'
                    ) {
                        alert('Please fill in all the fields.');
                        return false
                    }

                    formData[input.id] = input.value;
                    return true
                });

                if (!success) {
                    showButton()
                    return
                }

                apiSubmit('/api/qrph/init-transaction', formData)
                    .then((json) => {
                        showButton()
                        if (json.id) {
                            const baseUrl = window.location.origin;
                            const url = `${baseUrl}/qrph/get-transaction?id=${json.id}`;
                            window.location.href = url;
                        } else {
                            alert(json.message);
                        }
                    }
                )
            } catch (e) {
                showButton()
                console.log(e);
            }
        }
        document.addEventListener('DOMContentLoaded', function () {
            renderForm();
            const submitButton = document.getElementById('submitButton');
            submitButton.addEventListener('click', submit);
        });
    </script>
</body>
</html>
