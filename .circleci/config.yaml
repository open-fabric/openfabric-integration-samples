# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  node: circleci/node@5.0
  heroku: circleci/heroku@1.2.6
  slack: circleci/slack@4.4.4
jobs:
  deploy-merchant-integration-sample:
    working_directory: 
      ~/openfabric-integration-sample/merchant-integration-samples/frontend-sample
    docker:
      - image: 'cimg/node:16.8.0'
    steps:
      - checkout:
          path: 
            ~/openfabric-integration-sample
      - run: node --version
      - heroku/deploy-via-git:
          api-key: 612a4a81-0657-475a-a97a-5d22e108f34c
          app-name: merchant-integration-samples
          branch: chore/heroku-deploy
          post-steps:
            run: 

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample:
    jobs:
      - node/test
      - heroku/deploy-via-git:
          force: true # this parameter instructs the push to use a force flag when pushing to the heroku remote, see: https://devcenter.heroku.com/articles/git
          requires:
            - node/test # only run deploy-via-git job if the build job has completed
          filters:
            branches:
              # This sample config runs this job on any branch matching the regex below, however, it's more likely you want to only run this job on master.
              only: /.*-heroku-deploy/ # Delete this line
              # only: master  # Uncomment this line
